{"version":3,"sources":["components/quizAnswerBox/quizAnswerBox.component.js","components/quizTemplate/quizTemplate.component.js","pages/quizpage/quizpageComponent.js","pages/loginPage/loginPageComponent.jsx","components/sign-up/sign-up.component.jsx","pages/registerPage/registerPageComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["QuizAnswerBox","answer","answerChecker","className","onClick","QuizTemplate","question","answers","correctAnswer","questionNumber","score","array","randomIndex","currentIndex","length","Math","floor","random","shuffle","map","ans","i","Quizpage","useState","quizData","setQuizData","questionTracker","setQuestionTracker","setQuestion","setAnswers","setCorrectAnwser","SetScore","setQuestionData","atob","newArray","incorrect_answers","anw","oldArray","correct_answer","nextQuestion","prevCount","console","log","alert","useEffect","axios","get","then","res","data","results","LoginPage","src","alt","href","method","action","htmlFor","type","name","id","autocomplete","value","SignUp","username","email","password","state","setState","handleChange","e","target","prevState","onChange","label","placeholder","RegisterPage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb66b55a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./quizAnswerBox.styles.css\";\r\n\r\nfunction QuizAnswerBox({ answer, answerChecker }) {\r\n  return (\r\n    <button\r\n      className=\"answer-button\"\r\n      onClick={() => {\r\n        answerChecker(answer);\r\n      }}\r\n    >\r\n      {answer}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default QuizAnswerBox;\r\n","import React from \"react\";\r\nimport QuizAnswerBox from \"../quizAnswerBox/quizAnswerBox.component\";\r\nimport \"./quizTemplate.styles.css\";\r\n\r\nfunction QuizTemplate({\r\n  question,\r\n  answers,\r\n  correctAnswer,\r\n  answerChecker,\r\n  questionNumber,\r\n  score\r\n}) {\r\n  // shuffles anwsers\r\n  function shuffle(array) {\r\n    var currentIndex = array.length,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex]\r\n      ];\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz-template\">\r\n      <div className=\"question-container\">\r\n        <h1 className=\"question\">{question}</h1>\r\n      </div>\r\n      <div className=\"answer-container\">\r\n        {shuffle(answers).map((ans, i) => {\r\n          return (\r\n            <QuizAnswerBox answer={ans} answerChecker={answerChecker} key={i} />\r\n          );\r\n        })}\r\n      </div>\r\n      <div>\r\n        <p> question {questionNumber}</p>\r\n        <p>Score:{score}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizTemplate;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./quizpage.styles.css\";\r\nimport QuizTemplate from \"../../components/quizTemplate/quizTemplate.component\";\r\n\r\nimport axios from \"axios\";\r\nfunction Quizpage() {\r\n  const [quizData, setQuizData] = useState([]); // 10 question objects is stored here\r\n  const [questionTracker, setQuestionTracker] = useState(0); // keepts track of question number\r\n  const [question, setQuestion] = useState(\"\"); // current question\r\n  const [answers, setAnswers] = useState([]);\r\n  const [correctAnswer, setCorrectAnwser] = useState(\"\"); // correct answer of current question\r\n  const [score, SetScore] = useState(0);\r\n\r\n  // sets state from quizData\r\n  function setQuestionData() {\r\n    if (quizData.length > 0 && questionTracker <= 9) {\r\n      setQuestion(atob(quizData[questionTracker].question));\r\n\r\n      let anwsers = quizData[questionTracker].incorrect_answers;\r\n      //  atob function is used to encode api string\r\n      let newArray = anwsers.map(anw => {\r\n        return atob(anw);\r\n      });\r\n\r\n      setAnswers(newArray);\r\n\r\n      setAnswers(oldArray => [\r\n        ...oldArray,\r\n        atob(quizData[questionTracker].correct_answer)\r\n      ]);\r\n      setCorrectAnwser(atob(quizData[questionTracker].correct_answer));\r\n    }\r\n  }\r\n\r\n  // function to go to next question\r\n  function nextQuestion() {\r\n    if (questionTracker < 9) {\r\n      //    increments to next question\r\n      setQuestionTracker(prevCount => prevCount + 1);\r\n\r\n      console.log(questionTracker);\r\n    } else alert(\"your done\");\r\n  }\r\n\r\n  // function checks if answer is right or wrong\r\n  function answerChecker(answer) {\r\n    if (answer == correctAnswer) {\r\n      alert(\"correct\");\r\n      SetScore(prevCount => prevCount + 1);\r\n      nextQuestion();\r\n    } else {\r\n      nextQuestion();\r\n    }\r\n  }\r\n  // useffect is only ran once to fetch and store data from the api\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://opentdb.com/api.php?amount=10&category=9&difficulty=easy&type=multiple&encode=base64\"\r\n      )\r\n      .then(res => {\r\n        setQuizData(res.data.results);\r\n      });\r\n  }, []);\r\n  // this useEffect is only used for the first component mount only\r\n  useEffect(() => {\r\n    setQuestionData();\r\n  }, [quizData]);\r\n\r\n  // useeffect sets new question data when thier is a new question\r\n  useEffect(() => {\r\n    if (questionTracker > 0) {\r\n      setQuestionData();\r\n    }\r\n  }, [questionTracker]);\r\n\r\n  return (\r\n    <div className=\"quiz-page\">\r\n      <QuizTemplate\r\n        question={question}\r\n        answers={answers}\r\n        correctAnswer={correctAnswer}\r\n        answerChecker={answerChecker}\r\n        questionNumber={questionTracker + 1}\r\n        score={score}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quizpage;\r\n","import React, { Component } from \"react\";\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <div className=\"title\">\r\n            <h1>Welcome to Quiz App</h1>\r\n          </div>\r\n          <div className=\"logo\">\r\n            <img src=\"\" alt=\"logo here\" />\r\n          </div>\r\n          <div className=\"description\">\r\n            Take a quiz, challenge yourself and share it with your friends!\r\n          </div>\r\n        </div>\r\n        <div className=\"main\">\r\n          <p>\r\n            Please login below to start taking quizzes or <br />\r\n            <a href=\"/register\">create an account by clicking here.</a>\r\n          </p>\r\n          <form className=\"form-login\" method=\"post\" action=\"/login\">\r\n            <div className=\"field\">\r\n              <label htmlFor=\"email\">Email:</label>\r\n              <input type=\"text\" name=\"email\" id=\"email\" autocomplete=\"off\" />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label htmlFor=\"password\">Password:</label>\r\n              <input type=\"password\" name=\"password\" id=\"password\" />\r\n            </div>\r\n            <div className=\"field\">\r\n              <input type=\"submit\" value=\"Login\" className=\"btn-login\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"footer\">&copy; Quiz App 2021</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./sign-up.styles.css\";\r\n\r\nfunction SignUp() {\r\n  const [state, setState] = useState({ username: \"\", email: \"\", password: \"\" });\r\n\r\n  // const handleSubmit = e => {\r\n  //   e.preventDefault();\r\n  //   setState({ email: \"\", password: \"\", username: \"\" });\r\n  // };\r\n\r\n  const handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    setState(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-up\">\r\n      <div className=\"sign-up-card\">\r\n        <h1 className=\"sign-up-header\">Sign Up</h1>\r\n        <form method=\"post\" className=\"sign-up-form\">\r\n        {/* <form method=\"post\" onSubmit={handleSubmit} className=\"sign-up-form\"> */}\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={state.name}\r\n            onChange={handleChange}\r\n            label=\"name\"\r\n            placeholder=\"name\"\r\n            className=\"form-input\"\r\n          />\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={state.email}\r\n            onChange={handleChange}\r\n            label=\"email\"\r\n            placeholder=\"email\"\r\n            className=\"form-input\"\r\n          />\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={state.password}\r\n            onChange={handleChange}\r\n            label=\"password\"\r\n            placeholder=\"password\"\r\n            className=\"form-input\"\r\n          />        \r\n\r\n          <button type=\"submit\" className=\"sign-up-btn\">\r\n            Sign Up\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from \"react\";\r\nimport \"./registerPage.styles.css\";\r\nimport SignUp from \"../../components/sign-up/sign-up.component\";\r\n\r\nfunction RegisterPage() {\r\n  return (\r\n    <div className=\"register-page\">\r\n      <SignUp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Quizpage from \"./pages/quizpage/quizpageComponent\";\r\nimport LoginPage from \"./pages/loginPage/loginPageComponent.jsx\";\r\nimport RegisterPage from \"./pages/registerPage/registerPageComponent.jsx\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Quizpage} />\r\n        <Route exact path=\"/login\" component={LoginPage} />\r\n        <Route path=\"/register\" component={RegisterPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}